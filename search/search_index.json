{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#fancyglow-plugin-official-documentation","title":"FancyGlow Plugin - Official Documentation","text":"<p>Looking for a fun, EULA-friendly way to enhance your server? </p> <p>FancyGlow adds a stylish touch that players will love! Install it today and let the glow begin! \u2728</p>"},{"location":"#getting-started","title":"Getting started","text":"<p>  Installation</p> <p>  Commands, Permissions and Placeholders</p> <p>  FAQ</p> <p>  API</p>"},{"location":"API/","title":"API","text":""},{"location":"API/#about-it","title":"About it","text":"<p>The FancyGlow API will allow you to get, set, remove and check player glow status/modes.</p> <p>This API was introduced on plugin version 2.10.0</p>"},{"location":"API/#where-to-get-it","title":"Where to get it?","text":"<p>The API can currently be found at the plugin GitHub repo or using JitPack.</p> <p></p> MavenGradle kts <pre><code>&lt;repositories&gt;\n    &lt;repository&gt;\n        &lt;id&gt;jitpack.io&lt;/id&gt;\n        &lt;url&gt;https://jitpack.io&lt;/url&gt;\n    &lt;/repository&gt;\n&lt;/repositories&gt;\n\n&lt;dependencies&gt;\n    &lt;dependency&gt;\n        &lt;groupId&gt;com.github.imhhitt&lt;/groupId&gt;\n        &lt;artifactId&gt;FancyGlow&lt;/artifactId&gt;\n        &lt;version&gt;VERSION&lt;/version&gt;\n    &lt;/dependency&gt;\n&lt;/dependencies&gt;\n</code></pre> <pre><code>repositories {\n    maven(\"https://jitpack.io\")\n}\n\ndependencies {\n    implementation(\"com.github.imhhitt:FancyGlow:VERSION\")\n}\n</code></pre> API Methods <pre><code>public interface FancyGlowAPI {\n\n    /**\n     * Gets the current glow color of a player as a string.\n     * The returned string represents the color in a format that can be used for further processing.\n     *\n     * @param player The player whose glow color is being retrieved. Must not be null.\n     *\n     * @return The color format to use in another place or empty if the player does not have a glow effect.\n     */\n    String getPlayerGlowColor(Player player);\n\n    /**\n     * Gets the display name of the player's current glow color.\n     *\n     * @param player The player whose glow color name is being retrieved. Must not be null.\n     *\n     * @return A string representing the display name of the player's glow color, or \"NONE\" (configurable at plugin config) if the player does not have a glow effect.\n     */\n    String getPlayerGlowColorName(Player player);\n\n    /**\n     * Sets the glow color of a player.\n     * This method applies the specified glow color to the player, overriding any existing glow effect.\n     *\n     * @param player The player whose glow color is being set. Must not be null.\n     * @param color  The ChatColor to set as the player's glow color. Must not be null.\n     */\n    void setPlayerGlowColor(Player player, ChatColor color);\n\n    /**\n     * Removes the glow effect from a player.\n     * This method clears any active glow effect applied to the player.\n     *\n     * @param player The player whose glow effect is being removed. Must not be null.\n     */\n    void removePlayerGlow(Player player);\n\n    /**\n     * Checks if a player has a glow effect.\n     * This method determines whether the player currently has any glow effect applied.\n     *\n     * @param player The player to check. Must not be null.\n     *\n     * @return True if the player has a glow effect, false otherwise.\n     */\n    boolean hasGlow(Player player);\n\n    /**\n     * Checks if a player has rainbow mode enabled for their glow effect.\n     * Rainbow mode cycles through multiple colors for the player's glow effect.\n     *\n     * @param player The player to check. Must not be null.\n     *\n     * @return Returns true if the player has rainbow mode enabled, false otherwise.\n     */\n    boolean hasRainbowMode(Player player);\n\n    /**\n     * Enables or disables rainbow mode for a player.\n     * Rainbow mode cycles through multiple colors for the player's glow effect.\n     *\n     * @param player The player whose rainbow mode is being toggled. Must not be null.\n     * @param status If true will enable player rainbow mode.\n     */\n    void setRainbowMode(Player player, boolean status);\n\n    /**\n     * Checks if a player has flashing mode enabled for their glow effect.\n     * Flashing mode makes the player's glow effect blink or flash at regular intervals.\n     *\n     * @param player The player to check. Must not be null.\n     *\n     * @return Returns true if the player has flashing mode enabled, false otherwise.\n     */\n    boolean hasFlashingMode(Player player);\n\n    /**\n     * Enables or disables flashing mode for a player.\n     * Flashing mode makes the player's glow effect blink or flash at regular intervals.\n     *\n     * @param player The player whose flashing mode is being toggled. Must not be null.\n     * @param status If true will enable player flashing mode.\n     */\n    void setFlashingMode(Player player, boolean status);\n}\n</code></pre>"},{"location":"API/#example","title":"Example","text":"<p>Using de API</p> <pre><code>import org.bukkit.plugin.ServicesManager;\nimport org.bukkit.plugin.java.JavaPlugin;\n\npublic class MyPlugin extends JavaPlugin {\n\n    private FancyGlowAPI fancyGlowAPI;\n\n    @Override\n    public void onEnable() {\n        // Get the ServicesManager\n        ServicesManager servicesManager = getServer().getServicesManager();\n\n        // Retrieve the FancyGlowAPI instance\n        fancyGlowAPI = servicesManager.load(FancyGlowAPI.class);\n\n        if (fancyGlowAPI == null) {\n            getLogger().warning(\"FancyGlow plugin is not installed or API is not available.\");\n        } else {\n            getLogger().info(\"Successfully hooked into FancyGlowAPI!\");\n        }\n    }\n\n    public FancyGlowAPI getFancyGlowAPI() {\n        return fancyGlowAPI;\n    }\n}\n</code></pre>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#why-can-i-only-glow-in-one-color-usually-white","title":"Why can I only glow in one color (usually white)?","text":"<p>Possible reasons include:</p> <ul> <li>Make sure placeholders are set properly. See installation guide for more info.</li> <li>Outdated FancyGlow or outdated dependencies.</li> <li>Shaders may not render the correct glow color (if the shader even support the glow feature at all).</li> </ul>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#download","title":"Download","text":"<ul> <li>Download the latest plugin <code>.jar</code> file from the following official sites where FancyGlow is published:<ul> <li> Modrinth</li> <li> SpigotMC</li> <li> BuiltByBit</li> </ul> </li> <li>Download the following dependencies:<ul> <li>TAB by neznamy - Required for proper functioning!</li> <li>PlaceholderAPI - Required for proper functioning!</li> <li>Luckperms - Permission manager</li> </ul> </li> <li>Upload downloaded <code>.jar</code> files to your server\u2019s plugins folder.</li> <li>Restart your server and continue to the configuration section!</li> </ul>"},{"location":"installation/#configuration","title":"Configuration","text":"<ul> <li>Once the config files for TAB plugin are generated, navigate to <code>..plugins/TAB/groups.yml</code>.</li> <li>Add the <code>%fancyglow_color%</code> placeholder to the end of the player's tagprefix as it has to be the last color in the   prefix. Example configuration:</li> </ul> groups.yml<pre><code>_DEFAULT_:\n  tagprefix: '%vault-prefix%%fancyglow_color%'\n</code></pre> <p>Warning</p> <p>For Minecraft versions below <code>1.13</code> the prefix can't be longer than 14 characters due to a 16-character limit total (glow placeholder adds 2 characters which is <code>&amp;</code> and the color code)</p>"},{"location":"utility/","title":"Utility","text":""},{"location":"utility/#admin-plugin-features-permissions","title":"Admin &amp; plugin features permissions.","text":"Permission Function <code>fancyglow.admin</code> Grants full access to all commands and features. <code>fancyglow.all_colors</code> Unlocks all colors in GUI and commands. <code>fancyglow.rainbow</code> Enables rainbow glow mode. <code>fancyglow.flashing</code> Enables flashing glow mode."},{"location":"utility/#commands-and-permissions","title":"Commands and Permissions","text":"Command - Description Permission <code>/glow</code> - Opens the color selection GUI <code>fancyglow.command.gui</code> <code>/glow set &lt;player&gt; &lt;color&gt;</code> - Sets another player's glow color <code>fancyglow.command.set</code> <code>/glow color &lt;color&gt;</code> - Sets your glow color without GUI. Full list here. <code>fancyglow.command.color</code> <code>/glow reload</code> - Reloads the plugin configuration <code>fancyglow.command.reload</code> <code>/glow disable</code> - Disables your own glow <code>fancyglow.command.disable</code> <code>/glow disable &lt;player&gt;</code> - Disables another player's glow <code>fancyglow.command.disable.others</code> <code>/glow disable all</code> - Disables glow for all players <code>fancyglow.command.disable.everyone</code>"},{"location":"utility/#every-individual-color-permission","title":"Every individual color permission","text":"Colors permission list Permission Description <code>fancyglow.red</code> Grants access to the red glow color. <code>fancyglow.dark_red</code> Grants access to the dark red glow color. <code>fancyglow.blue</code> Grants access to the blue glow color. <code>fancyglow.dark_blue</code> Grants access to the dark blue glow color. <code>fancyglow.aqua</code> Grants access to the aqua glow color. <code>fancyglow.dark_aqua</code> Grants access to the dark aqua glow color. <code>fancyglow.green</code> Grants access to the green glow color. <code>fancyglow.dark_green</code> Grants access to the dark green glow color. <code>fancyglow.yellow</code> Grants access to the yellow glow color. <code>fancyglow.gold</code> Grants access to the gold glow color. <code>fancyglow.light_purple</code> Grants access to the light purple (pink) glow color. <code>fancyglow.dark_purple</code> Grants access to the dark purple (purple) glow color. <code>fancyglow.gray</code> Grants access to the gray glow color. <code>fancyglow.dark_gray</code> Grants access to the dark gray glow color. <code>fancyglow.black</code> Grants access to the black glow color. <code>fancyglow.white</code> Grants access to the white glow color."},{"location":"utility/#placeholders","title":"Placeholders","text":"Placeholder Description <code>%fancyglow_color%</code> Returns the glow color format code. <code>%fancyglow_color_name%</code> Returns the current glowing mode/color name. <code>%fancyglow_status%</code> Returns simple enabled/disabled status from papi config. <code>%fancyglow_status_formatted%</code> Returns formatted status (configurable in config.yml) <code>%fancyglow_status_&lt;color&gt;%</code> Checks if player has specific color enabled."},{"location":"utility/#color-specific-status-checks","title":"Color-Specific Status Checks","text":"<p>These placeholders return \"enabled\" if the player has the specified glow, or \"disabled\" if not. Replace <code>&lt;color&gt;</code> with any available color name (e.g., red, blue, rainbow): <code>%fancyglow_status_&lt;color&gt;%</code></p> <p>Examples: - <code>%fancyglow_status_red%</code> - <code>%fancyglow_status_rainbow%</code> - <code>%fancyglow_status_flashing%</code></p> <p>Works with all color options from the color permissions list.</p>"}]}